@inject IScrumParticipantRepository scrumParticipantRepository

<Microsoft.MobileBlazorBindings.Elements.ScrollView>
    <Microsoft.MobileBlazorBindings.Elements.Grid HorizontalOptions="LayoutOptions.FillAndExpand" VerticalOptions="LayoutOptions.FillAndExpand" @ref="grid">

        @if (showRandomizedActuallScrumParticipants)
        {
            if (ActualScrumParticipants != null && ActualScrumParticipants.Count > 0)
            {
                <RandomizedScrumParticipantsComponent ScrumParticipants="@ActualScrumParticipants" />
            }
            else
            {
                <ErrorComponent ErrorMessage="Nothing to see here!" />
            }
        }
        else
        {
            if (PossibleScrumParticipants != null && PossibleScrumParticipants.Count > 0)
            {
                <ScrumParticipantComponent ScrumParticipants="@PossibleScrumParticipants" />
            }
            else
            {
                <ErrorComponent ErrorMessage="Nothing to see here!" />
            }
        }
    </Microsoft.MobileBlazorBindings.Elements.Grid>


</Microsoft.MobileBlazorBindings.Elements.ScrollView>

@if (false == showRandomizedActuallScrumParticipants)
{
    <Microsoft.MobileBlazorBindings.Elements.Button Text="Start Scrum" VerticalOptions="LayoutOptions.EndAndExpand" OnClick="@OpenScrumRandomizerComponent" />
}

@code {
    private Microsoft.MobileBlazorBindings.Elements.Grid grid;
    private List<ScrumParticipant> PossibleScrumParticipants = new List<ScrumParticipant>();
    private List<ScrumParticipant> ActualScrumParticipants = new List<ScrumParticipant>();
    private int row = 0;
    private int column = 0;
    private bool showRandomizedActuallScrumParticipants = false;

    protected override async Task OnInitializedAsync()
    {
        PossibleScrumParticipants = scrumParticipantRepository.GetPossibleScrumParticipants();
    }

    private void OpenScrumRandomizerComponent()
    {
        grid.NativeControl.Children.Clear();
        ActualScrumParticipants = PossibleScrumParticipants.Where(p => p.IsParticipating == true).ToList();
        showRandomizedActuallScrumParticipants = true;
    }
}