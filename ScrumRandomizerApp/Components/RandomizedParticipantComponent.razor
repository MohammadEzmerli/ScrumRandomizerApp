@using System.Threading



<Microsoft.MobileBlazorBindings.Elements.StackLayout Margin=" new Thickness(25)">

    @if (CurrentScrumParticipant != null)
    {
        <Microsoft.MobileBlazorBindings.Elements.Label Text="@CurrentScrumParticipant.Name"
                                                   TextColor="Color.Black"
                                                   HorizontalTextAlignment="TextAlignment.Center"
                                                   Scale="4" />

        <Microsoft.MobileBlazorBindings.Elements.ProgressBar @ref="_progressBar"
                                                         Progress="@ProgressPercentComplete"
                                                         HeightRequest="20"
                                                         Margin="new Thickness(20)"
                                                         FlowDirection="FlowDirection.RightToLeft"
                                                         ProgressColor="Color.Red" />
    }

</Microsoft.MobileBlazorBindings.Elements.StackLayout>

@code {
    [Parameter]
    public ScrumParticipant CurrentScrumParticipant { get; set; }

    [Parameter]
    public double ProgressPercentComplete { get; set; }

    private Microsoft.MobileBlazorBindings.Elements.ProgressBar _progressBar;
    private Timer _timer;
    private bool playedSound = false;

    protected override async Task OnInitializedAsync()
    {
        _timer = new Timer(
        async (e) => { await TickTimer(e); },
        state: null,
        dueTime: TimeSpan.Zero,
        period: new TimeSpan(hours: 0, minutes: 0, seconds: 1));
    }


    private async Task TickTimer(object state)
    {
        ProgressPercentComplete += 0.015;
        await InvokeAsync(StateHasChanged);
        if (ProgressPercentComplete > 1 && ProgressPercentComplete < 1.1)
            await AlertByTextToSpeech();
    }

    private async Task PlayAlertSound()
    {
        if (false == playedSound)
            await Task.Run(() =>
            {
                playedSound = true;
                var player = Plugin.SimpleAudioPlayer.CrossSimpleAudioPlayer.Current;
                player.Load("alert.mp3");
                player.Play();
            });
    }

    private async Task AlertByTextToSpeech()
    {
        await Task.Run(() =>
        {
            Xamarin.Essentials.TextToSpeech.SpeakAsync("The time has run out! Please stop talking!");
        });
    }
}