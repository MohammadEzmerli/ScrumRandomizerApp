@inject IScrumParticipantRepository scrumParticipantRepository

<Microsoft.MobileBlazorBindings.Elements.Grid HorizontalOptions="LayoutOptions.FillAndExpand" VerticalOptions="LayoutOptions.FillAndExpand">

    @foreach (var item in PossibleScrumParticipants.OrderBy(p => p.Name))
    {
        <Microsoft.MobileBlazorBindings.Elements.GridCell Row="@row" Column="@column">
            <ParticipantComponent scrumParticipant="@item" />
        </Microsoft.MobileBlazorBindings.Elements.GridCell>
        column++;
        if (column % 3 == 0)
        {
            row++;
            column = 0;
        }
    }

</Microsoft.MobileBlazorBindings.Elements.Grid>
<Microsoft.MobileBlazorBindings.Elements.Button Text="Start Scrum" OnClick="@OpenScrumRandomizerComponent">

</Microsoft.MobileBlazorBindings.Elements.Button>
@code {
    private List<ScrumParticipant> PossibleScrumParticipants = new List<ScrumParticipant>();
    private int row = 0;
    private int column = 0;


    protected override async Task OnInitializedAsync()
    {
        PossibleScrumParticipants = scrumParticipantRepository.GetScrumParticipants();
    }

    private async Task OpenScrumRandomizerComponent()
    {
        await Task.Delay(1);
    }
}